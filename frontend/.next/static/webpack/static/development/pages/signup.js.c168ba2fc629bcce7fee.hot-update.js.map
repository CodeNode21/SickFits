{"version":3,"file":"static/webpack/static\\development\\pages\\signup.js.c168ba2fc629bcce7fee.hot-update.js","sources":["webpack:///./components/DeleteItem.js","webpack:///./components/Item.js","webpack:///./components/Items.js","webpack:///./components/Pagination.js","webpack:///./components/styles/ItemStyles.js","webpack:///./components/styles/PaginationStyles.js","webpack:///./components/styles/PriceTag.js","webpack:///./components/styles/Title.js","webpack:///./lib/formatMoney.js","webpack:///./pages/index.js","webpack:///./pages/signup.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport { ALL_ITEMS_QUERY } from './Items'\r\n\r\nconst DELETE_ITEM_MUTATION = gql`\r\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\r\n    deleteItem(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nclass DeleteItem extends Component {\r\n  update = (cache, payload) => {\r\n    // manually update the cache on the client, so it matches the server\r\n    // 1. Read the cache for the items we want \r\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY});\r\n    console.log(data, payload);\r\n    // 2. Filter the deleted item out of the page\r\n    data.items = data.items.filter(item => item.id !== payload.data.deletedItem.id);\r\n    // 3. Put the items back!\r\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data});\r\n  }\r\n  render() {\r\n    return (\r\n      <Mutation \r\n        mutation={DELETE_ITEM_MUTATION} \r\n        variables={{id: this.props.id }}\r\n        update={this.update}\r\n        >\r\n        {(deleteItem, { error }) => (\r\n          <button onClick={() => {\r\n            if(confirm('Are you sure you want to delete this item?')) {\r\n              deleteItem();\r\n            }\r\n          }}>{this.props.children}</button>\r\n        )}\r\n      </Mutation>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeleteItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Title from './styles/Title';\r\nimport ItemStyles from './styles/ItemStyles';\r\nimport PriceTag from './styles/PriceTag';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport Link from 'next/link'\r\nimport DeleteItem from './DeleteItem'\r\n\r\nexport default class Item extends Component {\r\n  static propTypes = {\r\n    item: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <ItemStyles>\r\n        {item.image && <img src={item.image} alt={item.title} />}\r\n\r\n      {/* {item.image ? <img /> : null} */}\r\n        <Title>\r\n          <Link href={{\r\n            pathname: '/item',\r\n            query: { id: item.id },\r\n            }}>\r\n            <a>{item.title}</a>\r\n          </Link>\r\n        </Title>\r\n        <PriceTag>{formatMoney(item.price)}</PriceTag>\r\n        <p>{item.description}</p>\r\n\r\n        <div className=\"buttonList\">\r\n          <Link href={{\r\n            pathname: 'update',\r\n            query: {id: item.id}\r\n          }}\r\n          >\r\n            <a>Edit here</a>\r\n          </Link>\r\n          <button>Add to Cart</button>\r\n          <DeleteItem id={item.id}>Delete this Item</DeleteItem>  \r\n        </div>\r\n      </ItemStyles>\r\n      \r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport Item from './Item';\r\nimport Pagination from './Pagination';\r\nimport { perPage } from '../config';\r\n\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY ($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items\r\n    (first: $first, skip: $skip, orderBy: price_ASC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n  `;\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\nclass Items extends Component {\r\n  render () {\r\n    return (\r\n      <Center>\r\n        <Pagination page={this.props.page} />\r\n          <Query \r\n            query={ALL_ITEMS_QUERY} \r\n            // fetchPolicy=\"network-only\" \r\n            variables={{\r\n              skip: this.props.page * perPage - perPage,\r\n              first: perPage,\r\n            }}\r\n          >\r\n            {({ data, error, loading }) => {\r\n              if(loading) return <p>Loading...</p>\r\n              if(error) return <p>Error: {error.message}</p>\r\n              return <ItemsList>\r\n                {data.items.map(item => <Item item={item} key={item.id}/>)}\r\n              </ItemsList>\r\n            }}\r\n          </Query>\r\n        <Pagination page={this.props.page} />\r\n      </Center>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Items;\r\nexport { ALL_ITEMS_QUERY };\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link'\r\nimport PaginationStyles from './styles/PaginationStyles';\r\nimport { perPage } from '../config';\r\n\r\nconst PAGINATION_QUERY = gql`\r\n  query PAGINATION_QUERY {\r\n    itemsConnection {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination = props => (\r\n  <Query query={PAGINATION_QUERY}>\r\n    {({data, loading, error}) => {\r\n      if (loading) return <p>Loading...</p>\r\n      const count =data.itemsConnection.aggregate.count;\r\n      const pages = Math.ceil(count / perPage);\r\n      const page = props.page\r\n      return (\r\n      <PaginationStyles>\r\n        <Head>\r\n          <title>Sick Fits! Page {page} of {pages}</title>\r\n        </Head>\r\n        <Link \r\n          prefetch\r\n          href={{\r\n            pathname: 'items',\r\n            query: {page: page -1}\r\n          }}\r\n        >\r\n          <a className=\"prev\" aria-disabled={page <= 1}>- Prev</a>\r\n        </Link>\r\n        <p>\r\n          Page {props.page} of {pages}!\r\n        </p>\r\n        <p>{count} Items Total</p>\r\n        <Link \r\n          prefetch\r\n          href={{\r\n            pathname: 'items',\r\n            query: {page: page +1}\r\n          }}\r\n        >\r\n          <a className=\"prev\" aria-disabled={page >= pages}>Next -</a>\r\n        </Link>\r\n      </PaginationStyles>\r\n    )}}\r\n  </Query>\r\n)\r\n\r\nexport default Pagination;","import styled from 'styled-components';\n\nconst Item = styled.div`\n  background: white;\n  border: 1px solid ${props => props.theme.offWhite};\n  box-shadow: ${props => props.theme.bs};\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  img {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n  }\n  p {\n    line-height: 2;\n    font-weight: 300;\n    flex-grow: 1;\n    padding: 0 3rem;\n    font-size: 1.5rem;\n  }\n  .buttonList {\n    display: grid;\n    width: 100%;\n    border-top: 1px solid ${props => props.theme.lightgrey};\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    grid-gap: 1px;\n    background: ${props => props.theme.lightgrey};\n    & > * {\n      background: white;\n      border: 0;\n      font-size: 1rem;\n      padding: 1rem;\n    }\n  }\n`;\n\nexport default Item;\n","import styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  text-align: center;\n  display: inline-grid;\n  grid-template-columns: repeat(4, auto);\n  align-items: stretch;\n  justify-content: center;\n  align-content: center;\n  margin: 2rem 0;\n  border: 1px solid ${props => props.theme.lightgrey};\n  border-radius: 10px;\n  & > * {\n    margin: 0;\n    padding: 15px 30px;\n    border-right: 1px solid ${props => props.theme.lightgrey};\n    &:last-child {\n      border-right: 0;\n    }\n  }\n  a[aria-disabled='true'] {\n    color: grey;\n    pointer-events: none;\n  }\n`;\n\nexport default PaginationStyles;\n","import styled from 'styled-components';\n\nconst PriceTag = styled.span`\n  background: ${props => props.theme.red};\n  transform: rotate(3deg);\n  color: white;\n  font-weight: 600;\n  padding: 5px;\n  line-height: 1;\n  font-size: 3rem;\n  display: inline-block;\n  position: absolute;\n  top: -3px;\n  right: -3px;\n`;\n\nexport default PriceTag;\n","import styled from 'styled-components';\n\nconst Title = styled.h3`\n  margin: 0 1rem;\n  text-align: center;\n  transform: skew(-5deg) rotate(-1deg);\n  margin-top: -3rem;\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n  a {\n    background: ${props => props.theme.red};\n    display: inline;\n    line-height: 1.3;\n    font-size: 4rem;\n    text-align: center;\n    color: white;\n    padding: 0 1rem;\n  }\n`;\n\nexport default Title;\n","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n","import Items from '../components/Items'\r\n\r\nconst Home = props => (\r\n    <div>\r\n        <Items page={parseFloat(props.query.page) || 1}/>\r\n    </div>\r\n);\r\nexport default Home;","import Signup from './'\r\n\r\nconst SignUp = props => (\r\n    <div>\r\n        <p> Sign up</p> \r\n\r\n    </div>\r\n);\r\nexport default SignUp;"],"mappings":"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","sourceRoot":""}