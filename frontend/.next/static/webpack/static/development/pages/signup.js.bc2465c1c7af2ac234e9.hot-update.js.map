{"version":3,"file":"static/webpack/static\\development\\pages\\signup.js.bc2465c1c7af2ac234e9.hot-update.js","sources":["webpack:///./components/CreateItem.js","webpack:///./components/ErrorMessage.js","webpack:///./components/styles/Form.js","webpack:///./pages/signup.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport Form from './styles/Form';\r\nimport formatMoney from '../lib/formatMoney';\r\nimport Error from './ErrorMessage';\r\nimport Router from 'next/router';\r\n\r\nconst CREATE_ITEM_MUTATION = gql`\r\n  mutation CREATE_ITEM_MUTATION(\r\n    $title: String!\r\n    $description: String!\r\n    $price: Int!\r\n    $image: String\r\n    $largeImage: String\r\n  ) {\r\n    createItem(\r\n      title: $title\r\n      description: $description\r\n      price: $price\r\n      image: $image\r\n      largeImage: $largeImage\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateItem extends Component {\r\n  state = {\r\n    title: 'Cool Shoes',\r\n    description: 'I love those shoes',\r\n    image: 'cat.jpg',\r\n    largeImage: 'large-cat.jpg',\r\n    price: 1000,\r\n  };\r\n  handleChange = e => {\r\n    const  { name, type, value } = e.target;\r\n    const val = type === 'number' ? parseFloat(value) : value;\r\n    this.setState({ [name]: val })\r\n  };\r\n\r\n  uploadFile = async e => {\r\n    console.log(\"uploading file...\");\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append('file', files[0]);\r\n    data.append('upload_preset', 'sickfits');\r\n\r\n    const res = await fetch('https://api.cloudinary.com/v1_1/matbed/image/upload', {\r\n      method: 'POST', \r\n      body: data\r\n    });\r\n    const file = await res.json();\r\n    console.log(file);\r\n    this.setState({\r\n      image: file.secure_url,\r\n      largeImage:file.eager[0].secure_url\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation \r\n      mutation={CREATE_ITEM_MUTATION} \r\n      variables={this.state}>\r\n        {(createItem, { loading, error}) => (\r\n\r\n      <Form \r\n        onSubmit={async e => {\r\n          // Stop the form from submitting\r\n          e.preventDefault();\r\n          // call the mutation\r\n          const res = await createItem();\r\n          // change them to the single page\r\n          console.log(res);\r\n          Router.push({\r\n            pathname: '/item',\r\n            query: { it: res.data.createItem.id },\r\n          })\r\n      }}>\r\n        <Error error={error} />\r\n        <fieldset disabled={loading} aria-busy={loading}>\r\n          <label htmlFor=\"file\">\r\n            Image\r\n            <input \r\n              type=\"file\" \r\n              id=\"file\" \r\n              name=\"file\" \r\n              placeholder=\"Upload an image\" \r\n              required \r\n              onChange={this.uploadFile}\r\n\r\n            />\r\n            {this.state.image && <img width=\"200\" src = {this.state.image} alt=\"Upload Preview\"/>}\r\n          </label>\r\n\r\n          <label htmlFor=\"title\">\r\n            Title\r\n            <input \r\n              type=\"text\" \r\n              id=\"title\" \r\n              name=\"title\" \r\n              placeholder=\"Title\" \r\n              required \r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n              />\r\n\r\n          </label>\r\n\r\n\r\n          <label htmlFor=\"price\">\r\n            Price\r\n            <input \r\n              type=\"number\" \r\n              id=\"price\" \r\n              name=\"price\" \r\n              placeholder=\"Price\" \r\n              required \r\n              value={this.state.price}\r\n              onChange={this.handleChange}\r\n              />\r\n\r\n          </label>\r\n\r\n          <label htmlFor=\"description\">\r\n            Description\r\n            <textarea\r\n              id=\"description\" \r\n              name=\"description\" \r\n              placeholder=\"Enter A Description\" \r\n              required \r\n              value={this.state.description}\r\n              onChange={this.handleChange}\r\n              />\r\n\r\n          </label>\r\n          <button type=\"submit\">Submit</button>\r\n        </fieldset>\r\n      </Form>\r\n      )}\r\n      </Mutation>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default CreateItem;\r\nexport { CREATE_ITEM_MUTATION }","import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n","import styled, { keyframes } from 'styled-components';\n\nconst loading = keyframes`\n  from {\n    background-position: 0 0;\n    /* rotate: 0; */\n  }\n\n  to {\n    background-position: 100% 100%;\n    /* rotate: 360deg; */\n  }\n`;\n\nconst Form = styled.form`\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  background: rgba(0, 0, 0, 0.02);\n  border: 5px solid white;\n  padding: 20px;\n  font-size: 1.5rem;\n  line-height: 1.5;\n  font-weight: 600;\n  label {\n    display: block;\n    margin-bottom: 1rem;\n  }\n  input,\n  textarea,\n  select {\n    width: 100%;\n    padding: 0.5rem;\n    font-size: 1rem;\n    border: 1px solid black;\n    &:focus {\n      outline: 0;\n      border-color: ${props => props.theme.red};\n    }\n  }\n  button,\n  input[type='submit'] {\n    width: auto;\n    background: red;\n    color: white;\n    border: 0;\n    font-size: 2rem;\n    font-weight: 600;\n    padding: 0.5rem 1.2rem;\n  }\n  fieldset {\n    border: 0;\n    padding: 0;\n\n    &[disabled] {\n      opacity: 0.5;\n    }\n    &::before {\n      height: 10px;\n      content: '';\n      display: block;\n      background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%);\n    }\n    &[aria-busy='true']::before {\n      background-size: 50% auto;\n      animation: ${loading} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport default Form;\n","import CreateItem from '../components/CreateItem';\r\n\r\n\r\nconst Sell = props => (\r\n    <div>\r\n        <CreateItem />\r\n\r\n    </div>\r\n);\r\nexport default Sell;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAiBA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxEA;AA8EA;;;;AAnHA;AACA;AAsHA;;;;;;;;;;;;;;;;;;;;;;ACnJA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAEA;AAYA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAiCA;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}